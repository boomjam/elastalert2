name: boombox elastalert

on:
  workflow_dispatch:
    inputs:
      deployment:
        type: choice
        description: 'deployment environment'
        default: development
        options: 
        - dev
        - us-prod-pri
        - us-prod-alt
        required: true

env:
  SERVICE_NAME: boomalert
  TAG: ${{ github.run_number }}

jobs:
  build-and-push:
    # create docker image and push to github container registry
    runs-on: ubuntu-latest
 
    steps:
    - name: repo checkout
      uses: actions/checkout@v3.3.0

    - name: ghcr login
      uses: docker/login-action@v2.1.0
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: build and push
      uses: docker/build-push-action@v4.0.0
      with:
        context: .
        push: true
        build-args: |
          GITHUB_ACCESS_TOKEN=${{ secrets.DEFAULT_TOKEN }}
          GITHUB_RUN_NUMBER=${{ github.run_number }}
        tags: |
          ghcr.io/boomjam/elastalert2/${{ env.SERVICE_NAME }}:latest
          ghcr.io/boomjam/elastalert2/${{ env.SERVICE_NAME }}:${{ env.TAG }}
  
  deploy-on-EKS:
    runs-on: ubuntu-latest
    needs: [build-and-push]

    permissions:
      contents: read
      id-token: write

    steps:
    - name: environment preparation
      id: envprep
      run: |
        # default deployment is deploy to dev
        echo "AWS_ROLE=${{ secrets.ELASTALERT_EKS_DEV_ROLE }}" >> $GITHUB_OUTPUT;
        echo "AWS_REGION=${{ secrets.ELASTALERT_US_DEV_REGION }}" >> $GITHUB_OUTPUT;
        echo "CLUSTER_NAME=${{ secrets.ELASTALERT_US_DEV_EKS_NAME }}" >> $GITHUB_OUTPUT;

        # production variables shared with all regions
        if [[ ${{ startsWith(github.event.inputs.deployment, 'us-prod') }} == true ]]; then \
          echo "AWS_ROLE=${{ secrets.ELASTALERT_EKS_PROD_ROLE }}" >> $GITHUB_OUTPUT; \
        fi

        # production variables unique to primary
        if [[ "${{ github.event.inputs.deployment }}" == "us-prod-pri" ]]; then \
          echo "AWS_REGION=${{ secrets.ELASTALERT_US_PRI_REGION }}" >> $GITHUB_OUTPUT; \
          echo "CLUSTER_NAME=${{ secrets.ELASTALERT_US_PRI_EKS_NAME }}" >> $GITHUB_OUTPUT; \
        fi

        # production variables unique to alternate
        if [[ "${{ github.event.inputs.deployment }}" == "us-prod-alt" ]]; then \
          echo "AWS_REGION=${{ secrets.ELASTALERT_US_ALT_REGION }}" >> $GITHUB_OUTPUT; \
          echo "CLUSTER_NAME=${{ secrets.ELASTALERT_US_ALT_EKS_NAME }}" >> $GITHUB_OUTPUT; \
        fi

    - run: ${{ secrets.ELASTALERT_US_DEV_REGION }}

    - run: ${{ steps.envprep.outputs.AWS_REGION }}

    - name: runner preparation
      run: |
        sudo apt update -y
        sudo apt install awscli -y

    - name: repo checkout
      uses: actions/checkout@v3.3.0

    - name: assume EKS role
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_KEY_GITHUB }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_GITHUB }}
        aws-region: ${{ steps.envprep.outputs.AWS_REGION }}
        role-duration-seconds: 1200
        role-session-name:  ${{ github.run_number }}-role
        role-to-assume: ${{ steps.envprep.outputs.AWS_ROLE }}

    - name: kubeconfig
      run: aws eks update-kubeconfig --name ${{ steps.envprep.outputs.CLUSTER_NAME }} --region ${{ steps.envprep.outputs.AWS_REGION }}
